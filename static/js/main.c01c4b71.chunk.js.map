{"version":3,"sources":["reportWebVitals.js","reducers/userReducer.js","components/JobApplicationInput.js","actions/addJobApplication.js","components/Header.js","containers/Home.js","App.js","components/Navbar.js","components/EditJobApplicationInput.js","actions/editJobApplication.js","components/JobAppCard.js","actions/deleteJobApplication.js","containers/JobApplicationsContainer.js","components/Footer.js","components/User.js","components/About.js","components/LoginModal.js","actions/addUser.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","userReducer","state","user","job_applications","action","type","payload","JobApplicationInput","handleOnChange","event","setState","target","name","value","props","id","console","log","handleOnSubmit","preventDefault","addJobApplication","company_name","date_of_application","position","application_status","current_stage","notes","user_id","isSubmitted","showModal","history","push","close","Modal","show","this","size","aria-labelledby","centered","onHide","Header","closeButton","Title","Body","Form","onSubmit","Group","controlId","Label","Control","placeholder","onChange","Button","variant","Footer","React","Component","withRouter","connect","data","userId","dispatch","fetch","headers","method","body","JSON","stringify","resp","json","job_app","Jumbotron","onClick","Home","App","className","NavBar","Navbar","bg","Brand","href","Nav","to","EditJobApplicationInput","editJobApplication","jobAppId","JobAppCard","handleOnClick","editJob","favorite","addHeart","Card","text","Subtitle","Text","deleteJobApplication","JobApplicationsContainer","generateJobAppCards","map","job_application","CardDeck","first_name","last_name","Link","LoginModal","addUser","email","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","exact","path","component","User","About","document","getElementById"],"mappings":"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","file":"static/js/main.c01c4b71.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const userReducer = (state = {user: {job_applications: []}}, action) => {\n    switch(action.type) {\n        case \"ADD_USER\":\n            return { user: action.payload}\n        case \"ADD_JOB_APPLICATION\":\n            return {...state,\n                user: {...state.user, job_applications: [...state.user.job_applications, action.payload]}  \n            }\n        case \"DELETE_JOB_APPLICATION\":\n            return { user: action.payload }\n        case \"EDIT_JOB_APPLICATION\":\n            return { user: action.payload }\n        default: \n            return state\n    }\n}\n\nexport default userReducer","import React from 'react';\nimport {connect} from 'react-redux'\nimport {Modal, Form, Button} from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport {addJobApplication} from '../actions/addJobApplication'\n\nclass JobApplicationInput extends React.Component {\n\n    constructor(){\n        super()\n        this.state = {\n            company_name: \"\",\n            date_of_application: \"\",\n            position: \"\",\n            application_status: true,\n            current_stage: \"\",\n            notes: \"\",\n            user_id: 0,\n            showModal: true,\n            isSubmitted: false\n        }\n    }\n\n    handleOnChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value,\n            application_status: true,\n            user_id: this.props.user.id\n          })\n        console.log(this.state)\n    }\n\n    handleOnSubmit = event => {\n        event.preventDefault();\n        this.props.addJobApplication(this.state)\n        this.setState({\n            company_name: \"\",\n            date_of_application: \"\",\n            position: \"\",\n            application_status: true,\n            current_stage: \"\",\n            notes: \"\",\n            user_id: 0,\n            isSubmitted: true,\n            showModal: false\n        })\n        this.props.history.push('/home')\n\n    }\n\n    close = () => {\n        this.setState({showModal: false})\n        this.props.history.push('/home')\n    }\n\n\n    render() {\n        return(\n            <div>\n            <Modal show={this.state.showModal} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered onHide={this.close}>\n              <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">Add Job Application</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <Form onSubmit={this.handleOnSubmit}>\n                  <Form.Group controlId=\"formBasicCompany\">\n                      <Form.Label>Company</Form.Label>\n                      <Form.Control type=\"name\" name=\"company_name\" placeholder=\"Company Name\" value={this.state.company_name} onChange={this.handleOnChange}/>\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formBasicDateOfApplication\">\n                      <Form.Label>Date</Form.Label>\n                      <Form.Control type=\"name\" name=\"date_of_application\"placeholder=\"MM-DD-YYYY\" value={this.state.date_of_application} onChange={this.handleOnChange}/>\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formBasicPosition\">\n                      <Form.Label></Form.Label>\n                      <Form.Control type=\"name\" name=\"position\" placeholder=\"Position\" value={this.state.position} onChange={this.handleOnChange}/>\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formBasicCurrentStage\">\n                      <Form.Label></Form.Label>\n                      <Form.Control type=\"name\" name=\"current_stage\" placeholder=\"Current Stage\" value={this.state.current_stage} onChange={this.handleOnChange}/>\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formBasicNotes\">\n                      <Form.Label></Form.Label>\n                      <Form.Control type=\"name\" name=\"notes\" placeholder=\"Notes\" value={this.state.notes} onChange={this.handleOnChange}/>\n                  </Form.Group>\n\n                  <Button variant=\"primary\" type=\"submit\" >\n                      Submit\n                  </Button>\n                </Form>\n              </Modal.Body>\n              <Modal.Footer>\n              </Modal.Footer>\n            </Modal>\n          </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {user: state.user}\n}\n\nexport default withRouter(connect(mapStateToProps, { addJobApplication })(JobApplicationInput))","export const addJobApplication = (data) => {\n    const userId = data.user_id\n    return (dispatch) => {\n        fetch(`http://localhost:3000/api/v1/users/${userId}/job_applications`, {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'POST',\n            body: JSON.stringify(data)\n        })\n        .then(resp => resp.json())\n        .then(job_app => dispatch({type: \"ADD_JOB_APPLICATION\", payload: job_app}))\n    }\n}","import { Jumbotron } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom'\nimport React from 'react';\n\nconst Header = (props) => {\n\n    const handleOnClick = event => {\n        props.history.push('/login')\n    }\n\n    return (\n        <Jumbotron>\n        <h1>Welcome To Job Tracker!</h1>\n        <p>\n            An application that allows you to track the progress of all of your current job applications.\n        </p>\n        <p>Please Log In or Sign Up Below</p>\n        <p>\n            <Button onClick={handleOnClick}variant=\"primary\">Log In/Sign Up</Button>\n        </p>\n    </Jumbotron>\n    )\n}\n\nexport default withRouter(Header)","import React from 'react';\nimport Header from '../components/Header'\n\nconst Home = () => {\n    return (\n        <Header/>\n    )\n}\n\nexport default Home","import './App.css';\nimport Home from './containers/Home'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport {Navbar, Nav} from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nconst NavBar = () => {\n    return (\n        <div>\n            <Navbar bg=\"primary\" variant=\"dark\">\n                <Navbar.Brand href=\"/\">JobTracker</Navbar.Brand>\n                <Nav className=\"mr-auto\">\n                    <Link to=\"/home\">Home</Link>\n                    <Link to=\"/about\">About</Link>\n                    <Link to=\"/add-job\">Add Application</Link>\n                </Nav>\n            </Navbar>\n        </div>\n    )\n}\n\nexport default NavBar","import React from 'react';\nimport { Form, Modal, Button} from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport { editJobApplication } from '../actions/editJobApplication';\n\nclass EditJobApplicationInput extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            company_name: this.props.job_app.company_name,\n            date_of_application: this.props.job_app.date_of_application,\n            position: this.props.job_app.position,\n            application_status: true,\n            current_stage: this.props.job_app.current_stage,\n            notes: this.props.job_app.notes,\n            user_id: this.props.job_app.user_id,\n            showModal: true,\n            isSubmitted: false\n        }\n    }\n\n    handleOnChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value,\n            application_status: true,\n            user_id: this.props.job_app.user_id\n          })\n    }\n\n    handleOnSubmit = event => {\n        event.preventDefault();\n        this.props.editJobApplication(this.props.job_app.id, this.state)\n        this.setState({\n            company_name: \"\",\n            date_of_application: \"\",\n            position: \"\",\n            application_status: true,\n            current_stage: \"\",\n            notes: \"\",\n            ...this.state, \n            isSubmitted: true\n        })\n        this.props.history.push('/home')\n    }\n\n    close = () => {\n        this.setState({showModal: false})\n    }\n\n\n    render() {\n        return(\n            \n            <div>\n            <Modal show={this.state.showModal} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" onHide={this.close}>\n              <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">Job Application for {this.state.company_name}</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <Form onSubmit={this.handleOnSubmit}>\n                  <Form.Group controlId=\"formBasicCompany\">\n                      <Form.Label>Company</Form.Label>\n                      <Form.Control type=\"name\" name=\"company_name\" placeholder=\"Company Name\" value={this.state.company_name} onChange={this.handleOnChange}/>\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formBasicDateOfApplication\">\n                      <Form.Label>Date</Form.Label>\n                      <Form.Control type=\"name\" name=\"date_of_application\"placeholder=\"MM-DD-YYYY\" value={this.state.date_of_application} onChange={this.handleOnChange}/>\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formBasicPosition\">\n                      <Form.Label>Position</Form.Label>\n                      <Form.Control type=\"name\" name=\"position\" placeholder=\"Position\" value={this.state.position} onChange={this.handleOnChange}/>\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formBasicCurrentStage\">\n                      <Form.Label>Current Stage</Form.Label>\n                      <Form.Control type=\"name\" name=\"current_stage\" placeholder=\"Current Stage\" value={this.state.current_stage} onChange={this.handleOnChange}/>\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formBasicNotes\">\n                      <Form.Label>Notes</Form.Label>\n                      <Form.Control type=\"name\" name=\"notes\" placeholder=\"Notes\" value={this.state.notes} onChange={this.handleOnChange}/>\n                  </Form.Group>\n\n                  <Button variant=\"primary\" type=\"submit\" onClick={this.close}>\n                      Submit\n                  </Button>\n                </Form>\n              </Modal.Body>\n              <Modal.Footer>\n              </Modal.Footer>\n            </Modal>\n          </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {user: state.user}\n}\n\nexport default withRouter(connect(mapStateToProps, { editJobApplication })(EditJobApplicationInput))","export const editJobApplication = (jobAppId, data) => {\n    return (dispatch) => {\n        fetch(`http://localhost:3000/api/v1/users/${data.user_id}/job_applications/${jobAppId}`, {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'PATCH',\n            body: JSON.stringify(data)\n        })\n        .then(resp => resp.json())\n        .then(user => dispatch({type: \"EDIT_JOB_APPLICATION\", payload: user}))\n    }\n}","import React from 'react';\nimport {Card, Button} from 'react-bootstrap'\nimport { connect } from 'react-redux';\nimport EditJobApplicationInput from './EditJobApplicationInput';\nimport { deleteJobApplication } from '../actions/deleteJobApplication'\n\nclass JobAppCard extends React.Component {\n\n    constructor() {\n        super()\n        this.state = {\n            editJob: false,\n            favorite: false,\n            addHeart: \"\"\n        }\n    }\n    \n    // handleFavorite = event => {\n    //     this.setState({\n    //         favorite: !this.state.favorite\n    //     })\n    //     if (this.state.favorite === true) {\n    //         this.setState({\n    //             addHeart: \"<3\"\n    //         })\n    //     } else {\n    //         this.setState({\n    //             addHeart: \"\"\n    //         })\n    //     }\n    // }\n\n    handleOnClick = event => {\n        this.setState({\n            editJob: !this.state.editJob\n        })\n    }\n\n    render() {\n        const { job_app } = this.props\n\n        return(\n        <div>\n        <Card className=\"text-left\" bg=\"dark\" text=\"light\">\n            <Card.Header className=\"text-center\">{job_app.position} - {job_app.company_name}</Card.Header>\n            <Card.Body>\n                {/* <Card.Title>{job_app.company_name}</Card.Title> */}\n                <Card.Subtitle>\n                    Stage: {job_app.current_stage}\n                </Card.Subtitle>\n            <Card.Body>\n            <Card.Text>\n                    Notes: {job_app.notes}\n                    <br></br>\n                    {/* Favorite: {this.state.addHeart} */}\n                </Card.Text>\n            </Card.Body>\n                <Button variant=\"primary\" onClick={this.handleOnClick}>Update</Button> <Button variant=\"danger\" onClick={() => this.props.deleteJobApplication(job_app.id, job_app.user_id)}>Delete</Button>\n                {/* <Button variant=\"primary\" onClick={this.handleFavorite}>Favorite</Button> */}\n            </Card.Body>\n            <Card.Footer className=\"text-muted\">\n                {job_app.date_of_application}\n            </Card.Footer>\n        </Card>\n    <br/> \n    {this.state.editJob && <EditJobApplicationInput job_app={job_app}/>}\n    </div>\n    )}\n\n}\n\nexport default connect(null, { deleteJobApplication })(JobAppCard)","export const deleteJobApplication = (jobAppId, userId) => {\n    return (dispatch) => {\n        fetch(`http://localhost:3000/api/v1/users/${userId}/job_applications/${jobAppId}`, {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'DELETE',\n        })\n        .then(resp => resp.json())\n        .then(user => dispatch({type: \"DELETE_JOB_APPLICATION\", payload: user}))\n    }\n}","import React from 'react';\nimport JobAppCard from '../components/JobAppCard'\nimport {CardDeck} from 'react-bootstrap'\n\n\nclass JobApplicationsContainer extends React.Component {\n\n\n    generateJobAppCards = () => {\n        return this.props.user.job_applications.map(job_application => <JobAppCard key={job_application.id} job_app={job_application}/>)\n    }\n\n    render() {\n        return(\n            <div>\n                <CardDeck>\n                    {this.generateJobAppCards()}\n                </CardDeck>\n            </div>\n        )\n    }\n}\n\n// const mapStateToProps = (state) => {\n//     return {user: state.user}\n// }\n\nexport default JobApplicationsContainer","import React from 'react';\n\nconst Footer = () => {\n  return (\n    <div className='footer'>\n      <a href=\"https://github.com/astanley74\"> Github: https://github.com/astanley74</a>\n    </div>\n  )\n}\n\nexport default Footer;","import React from 'react';\nimport {connect} from 'react-redux'\nimport NavBar from './Navbar'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport JobApplicationsContainer from '../containers/JobApplicationsContainer'\nimport Footer from './Footer'\n\nconst User = (props) => {\n\n        return(\n            <div>\n                <NavBar/>\n                <Jumbotron>\n                    <h1>{props.user.first_name} {props.user.last_name}</h1>\n                        <p>\n                            Welcome to your job application portal. All of your current job applications are listed below.\n                        </p>\n                </Jumbotron>\n                <JobApplicationsContainer user={props.user}/>\n                <Footer/>\n            </div>\n        )\n}\n\nconst mapStateToProps = (state) => {\n    return {user: state.user}\n}\nexport default connect(mapStateToProps)(User)","import React from 'react';\nimport {Card, Button} from 'react-bootstrap'\nimport {withRouter} from 'react-router-dom'\nimport NavBar from './Navbar'\n\nconst About = (props) => {\n\n    const handleOnClick = event => {\n        props.history.push('/home')\n    }\n    return(\n        <div>\n        <NavBar/>\n        <Card>\n            <Card.Header className=\"text-center\">About</Card.Header>\n            <Card.Body>\n                <Card.Title className=\"text-center\">What Is Job Tracker?</Card.Title>\n                <Card.Subtitle>\n                    Job Tracker is an app that allows you to add job applications to your profile in order to keep track\n                    of all of your current job applications. It allows you to update your job apps to monitor your progress with your\n                    prospective companies. \n                </Card.Subtitle>\n                <Card.Text>\n\n                </Card.Text>\n                <Button variant=\"primary\" onClick={() => handleOnClick()}>User Home</Button>\n            </Card.Body>\n            <Card.Footer className=\"text-center\">\n                <Card.Link href=\"#https://github.com/astanley74\">Github: https://github.com/astanley74</Card.Link>\n            </Card.Footer>\n        </Card>\n        </div>\n    )\n}\n\nexport default withRouter(About)","import React from 'react';\nimport {Modal, Button, Form} from 'react-bootstrap'\nimport { addUser } from '../actions/addUser'\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\n\nclass LoginModal extends React.Component {\n\n    constructor() {\n      super()\n      this.state = {\n        first_name: \"\",\n        last_name: \"\",\n        email: \"\",\n        showModal: true,\n        isSubmitted: false\n      }\n    }\n\n    handleOnChange = event => {\n      this.setState({\n          [event.target.name]: event.target.value\n        })\n      console.log(this.state)\n    }\n\n    handleOnSubmit = event => {\n        event.preventDefault();\n        this.props.addUser(this.state)\n        this.setState({\n            first_name: \"\",\n            last_name: \"\",\n            email: \"\",\n            isSubmitted: true,\n            showModal: false\n        })\n        this.props.history.push('/home')\n\n    }\n\n    close = () => {\n        this.setState({showModal: false})\n        this.props.history.push('/')\n    }\n\n    render() {\n        return (\n          <div>\n            <Modal show={this.state.showModal} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered onHide={this.close}>\n              <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">Login Or Sign Up!</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <Form onSubmit={this.handleOnSubmit}>\n                  <Form.Group controlId=\"formBasicEmail\">\n                      <Form.Label>Email address</Form.Label>\n                      <Form.Control type=\"email\" name=\"email\" placeholder=\"Enter email\" value={this.state.email} onChange={this.handleOnChange}/>\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formBasicFirstName\">\n                      <Form.Label>First Name</Form.Label>\n                      <Form.Control type=\"name\" name=\"first_name\"placeholder=\"First Name\" value={this.state.first_name} onChange={this.handleOnChange}/>\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formBasicLastName\">\n                      <Form.Label>Last Name</Form.Label>\n                      <Form.Control type=\"name\" name=\"last_name\" placeholder=\"Last Name\" value={this.state.last_name} onChange={this.handleOnChange}/>\n                  </Form.Group>\n\n                  <Button variant=\"primary\" type=\"submit\">\n                      Submit\n                  </Button>\n                </Form>\n              </Modal.Body>\n              <Modal.Footer>\n              </Modal.Footer>\n            </Modal>\n          </div>\n        );\n      }\n}\n\nexport default withRouter(connect(null, { addUser })(LoginModal))","export const addUser = (data) => {\n    return (dispatch) => {\n        fetch('http://localhost:3000/api/v1/users', {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'POST',\n            body: JSON.stringify(data)\n        })\n        .then(resp => resp.json())\n        .then(user => dispatch({type: \"ADD_USER\", payload: user}))\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nimport userReducer from './reducers/userReducer'\nimport JobApplicationInput from './components/JobApplicationInput';\nimport App from './App';\nimport User from './components/User';\nimport About from './components/About';\nimport LoginModal from './components/LoginModal'\nimport EditJobApplicationInput from './components/EditJobApplicationInput'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(userReducer, composeEnhancers(\n\tapplyMiddleware(thunk) \n\t))\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      \t  <Route exact path=\"/\" component= { App } />\n          <Route path=\"/login\" component= {LoginModal }/>\n          <Route path=\"/home\" component= { User } />\n          <Route path=\"/about\" component= { About }/> \n          <Route path=\"/add-job\" component= { JobApplicationInput }/>\n          <Route path=\"/edit-job\" component= { EditJobApplicationInput }/>\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}